#include <stdio.h>
#define MAX_SIZE 100

int count(int list[], int size, int element) {
    int count = 0;
    for (int i = 0; i < size; i++) {
        if (list[i] == element) {
            count++;
        }
    }
    return count;
}

int index(int list[], int size, int element) {
    for (int i = 0; i < size; i++) {
        if (list[i] == element) {
            return i;
        }
    }
    return -1;  // Se o elemento não for encontrado, retorna -1
}

void reverse(int list[], int size) {
    for (int i = 0; i < size / 2; i++) {
        int temp = list[i];
        list[i] = list[size - i - 1];
        list[size - i - 1] = temp;
    }
}

void sort(int list[], int size) {
    for (int i = 0; i < size - 1; i++) {
        for (int j = 0; j < size - i - 1; j++) {
            if (list[j] > list[j + 1]) {
                int temp = list[j];
                list[j] = list[j + 1];
                list[j + 1] = temp;
            }
        }
    }
}

int append(int list[], int *size, int element) {
    if (*size < MAX_SIZE) {
        list[*size] = element;
        (*size)++;
        return 1;  // Sucesso
    }
    return 0;  // Erro, tamanho máximo atingido
}

int insert(int list[], int *size, int index, int element) {
    if (*size < MAX_SIZE && index >= 0 && index <= *size) {
        for (int i = *size; i > index; i--) {
            list[i] = list[i - 1];
        }
        list[index] = element;
        (*size)++;
        return 1;  // Sucesso
    }
    return 0;  // Erro, tamanho máximo atingido ou índice inválido
}

int pop(int list[], int *size, int index) {
    if (*size > 0 && index >= 0 && index < *size) {
        int element = list[index];
        for (int i = index; i < *size - 1; i++) {
            list[i] = list[i + 1];
        }
        (*size)--;
        return element;
    }
    return -1;
}

int remove_element(int list[], int *size, int element) {
    int idx = index(list, *size, element);
    if (idx != -1) {
        pop(list, size, idx);
        return 1;
    }
    return 0; 
}

int main() {
    int list[MAX_SIZE] = {25, 3, 7, 50, 75, 100};
    int size = 6;

    printf("Lista: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", list[i]);
    }
    printf("\n");

    printf("Count of 3: %d\n", count(list, size, 3));
    printf("Index of 7: %d\n", index(list, size, 7));

    reverse(list, size);
    printf("Lista com reversão: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", list[i]);
    }
    printf("\n");

    sort(list, size);
    printf("Lista com ordenação: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", list[i]);
    }
    printf("\n");

    append(list, &size, 42);
    printf("Lista após append: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", list[i]);
    }
    printf("\n");

    insert(list, &size, 2, 99);
    printf("Lista após insert: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", list[i]);
    }
    printf("\n");

    int popped = pop(list, &size, 4);
    printf("Elemento pop do índice 4: %d\n", popped);
    printf("Lista após pop: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", list[i]);
    }
    printf("\n");

    remove_element(list, &size, 7);
    printf("Lista após remove: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", list[i]);
    }
    printf("\n");

    return 0;
}
